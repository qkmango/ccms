<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.qkmango.ccms.mvc.dao.StatisticDao">

    <select id="count" resultType="int">
        SELECT FOUND_ROWS()
    </select>

    <select id="consumeCountPriceByDayAndType" resultType="cn.qkmango.ccms.domain.entity.ConsumeStatistic">
        select
        DATE_FORMAT(createTime, '%Y-%m-%d') AS date,
        sum(price)                          AS price,
        count(id)                           AS count,
        type                                AS consumeType
        from t_consume
        <where>
            type not in ('PAYMENT','RECHARGE','REFUND')
            <if test="startTime != null">
                and createTime &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                and createTime &lt;= #{endTime}
            </if>
        </where>
        group by DAY(createTime),type
        order by date;
    </select>

    <select id="consumeStatistic" resultType="cn.qkmango.ccms.domain.entity.ConsumeStatistic">
        select
        id,
        date,
        price,
        count,
        type,
        consume_type
        from t_consume_statistic
        <where>
            <if test="startTime != null">
                date &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                and date &lt;= #{endTime}
            </if>
        </where>
        order by date;
    </select>

    <select id="consumeInfo" resultType="java.util.Map">
        SELECT sum(price)       as sum,
               count(id)        as count,
               ceil(avg(price)) as avg,
               max(price)       as max
        FROM t_consume
        WHERE user = #{id}
          AND type not in ('PAYMENT', 'RECHARGE', 'REFUND')
          AND createTime &gt;= #{range.startTime}
          AND createTime &lt;= #{range.endTime}
    </select>

    <select id="consumePriceByType" resultType="java.util.Map">
        SELECT type,
               sum(price) as price
        FROM t_consume
        WHERE user = #{id}
          AND type not in ('PAYMENT', 'RECHARGE', 'REFUND')
          AND createTime &gt;= #{range.startTime}
          AND createTime &lt;= #{range.endTime}
        GROUP BY type
    </select>

    <insert id="insertConsumeStatistics">
        INSERT INTO t_consume_statistic (consume_type, price, date, count, type)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.consumeType},
            #{item.price},
            #{item.date},
            #{item.count},
            #{item.type}
            )
        </foreach>
    </insert>


</mapper>
